var passport = require('passport')
  , FacebookStrategy = require('passport-facebook').Strategy;

passport.use(new FacebookStrategy({
    clientID: FACEBOOK_APP_ID,
    clientSecret: FACEBOOK_APP_SECRET,
    callbackURL: "http://www.example.com/auth/facebook/callback"
  },
  function(accessToken, refreshToken, profile, done) {
    User.findOrCreate(...)
    // findOrCreate({
      // email: profile.email,
      // gender: profile.gender,
      // birthday: profile.bday
    //})
      .then(user => done(null, user))
      .catch(err => done(err));
  }
));


//////////////////
passport.use(new FacebookStrategy({
    clientID: FACEBOOK_APP_ID,
    clientSecret: FACEBOOK_APP_SECRET,
    callbackURL: "http://localhost:3000/auth/facebook/callback"
  },
  function(accessToken, refreshToken, profile, cb) {
    User.findOrCreate({ facebookId: profile.id }, function (err, user) {
      return cb(err, user);
    });
  }
));
/Users/mac/Documents/IronYard/projects/summer-back/node_modules/passport-facebook

////////////////////
user model

var Volunteer = sequelize.define('Volunteer', {
  date: DataTypes.STRING,
  title: DataTypes.STRING,
  description: DataTypes.TEXT,
  location: DataTypes.STRING,
  contact: DataTypes.STRING,
  photoUrl: DataTypes.STRING,
  activityUrl: DataTypes.STRING,
  isVolunteer: DataTypes.BOOLEAN

  var User = sequelize.define('User', {
    name: DataTypes.STRING,
    firstName: DataTypes.STRING,
    lastName: DataTypes.STRING,
    username: DataTypes.STRING,
    email: DataTypes.STRING,
    password: DataTypes.STRING,
    salt: DataTypes.STRING,
    profileUrl: DataTypes.STRING,
    facebookId: DataTypes.STRING,
    isAdmin: DataTypes.BOOLEAN

    var Job = sequelize.define('Job', {
      title: DataTypes.STRING,
      employer: DataTypes.STRING,
      description: DataTypes.TEXT,
      location: DataTypes.STRING,
      contact: DataTypes.STRING,
      email: DataTypes.STRING,
      isJob: DataTypes.BOOLEAN

      var Educational = sequelize.define('Educational', {
        date: DataTypes.STRING,
        title: DataTypes.STRING,
        description: DataTypes.TEXT,
        location: DataTypes.STRING,
        contact: DataTypes.STRING,
        photoUrl: DataTypes.STRING,
        activityUrl: DataTypes.STRING,
        admissionFee: DataTypes.STRING,
        isEducational: DataTypes.BOOLEAN

        var Camp = sequelize.define('Camp', {
          date: DataTypes.STRING,
          title: DataTypes.STRING,
          description: DataTypes.TEXT,
          location: DataTypes.STRING,
          contact: DataTypes.STRING,
          photoUrl: DataTypes.STRING,
          activityUrl: DataTypes.STRING,
          admissionFee: DataTypes.STRING,
          isCamp: DataTypes.BOOLEAN

          var Activity = sequelize.define('Activity', {
            date: DataTypes.STRING,
            title: DataTypes.STRING,
            description: DataTypes.TEXT,
            location: DataTypes.STRING,
            contact: DataTypes.STRING,
            photoUrl: DataTypes.STRING,
            activityUrl: DataTypes.STRING,
            admissionFee: DataTypes.STRING,
            isActivity: DataTypes.BOOLEAN


            'use strict';
            module.exports = function(sequelize, DataTypes) {
              var Likes = sequelize.define('Likes', {
                user_id: DataTypes.INTEGER,
                activity_id: DataTypes.INTEGER,
                comment_id: DataTypes.INTEGER
              }, {
                classMethods: {
                  associate: function(models) {
                    // associations can be defined here
                  }
                }
              });
              return Likes;
            };


            'use strict';
            module.exports = function(sequelize, DataTypes) {
              var Guestlist = sequelize.define('Guestlist', {
                user_id: DataTypes.INTEGER,
                activity_id: DataTypes.INTEGER,
                attending: DataTypes.BOOLEAN
              }, {
                classMethods: {
                  associate: function(models) {
                    // associations can be defined here
                  }
                }
              });
              return Guestlist;
            };

            'use strict';
            module.exports = function(sequelize, DataTypes) {
              var Comment = sequelize.define('Comment', {
                date: DataTypes.STRING,
                title: DataTypes.STRING,
                description: DataTypes.TEXT,
                activity_id: DataTypes.INTEGER,
                user_id: DataTypes.INTEGER
              }, {
                classMethods: {
                    associate: function(models) {
                      Comment.belongsTo(models.User, {foreignKey: 'user_id'} )
                    }
                }
                });
                return Comment;
              };



            classMethods: {
            associate: function(models) {
                User.hasMany(models.Activity, {
                  foreignKey: 'user_id'
                });
              }
          }
        })
          return User;
        };

        classMethods: {
            associate: function(models) {
              Comment.belongsTo(models.User, {foreignKey: 'user_id'} )
            }
        }
        });
        return Comment;
      };

      'use strict';
      module.exports = function(sequelize, DataTypes) {
        var Activity = sequelize.define('Activity', {
          category: DataTypes.STRING,
          email: DataTypes.STRING,
          employer: DataTypes.STRING,
          date: DataTypes.STRING,
          title: DataTypes.STRING,
          description: DataTypes.TEXT,
          location: DataTypes.STRING,
          contact: DataTypes.STRING,
          photoUrl: DataTypes.STRING,
          activityUrl: DataTypes.STRING,
          admissionFee: DataTypes.STRING,
          isActivity: DataTypes.BOOLEAN,
          user_id: DataTypes.INTEGER,
          commentnumber: DataTypes.INTEGER,
          likesnumber: DataTypes.INTEGER
        }, {
          classMethods: {
            associate: function(models) {
              Activity.hasMany(models.Comment,{foreignKey: 'activity_id'} )
              Activity.belongsTo(models.User, {
                foreignKey: 'user_id'
              })
              // associations can be defined here
            }
          }
        });
        return Activity;
      };


      'use strict';
      module.exports = {
        up: function(queryInterface, Sequelize) {
          return queryInterface.createTable('Activities', {
            id: {
              allowNull: false,
              autoIncrement: true,
              primaryKey: true,
              type: Sequelize.INTEGER
            },
            category: {
              type: Sequelize.STRING
            },
            email: {
              type: Sequelize.STRING
            },
            employer: {
              type: Sequelize.STRING
            },
            date: {
              type: Sequelize.STRING
            },
            title: {
              type: Sequelize.STRING
            },
            description: {
              type: Sequelize.TEXT
            },
            location: {
              type: Sequelize.STRING
            },
            contact: {
              type: Sequelize.STRING
            },
            photoUrl: {
              type: Sequelize.STRING
            },
            activityUrl: {
              type: Sequelize.STRING
            },
            admissionFee: {
              type: Sequelize.STRING
            },
            isActivity: {
              type: Sequelize.BOOLEAN,
              defaultValue: false
            },
            user_id: {
              type: Sequelize.INTEGER
            },
            commentnumber: {
              type: Sequelize.INTEGER,
              defaultValue: 0
            },
            likesnumber: {
              type: Sequelize.INTEGER,
              defaultValue: 0
            },
            createdAt: {
              allowNull: false,
              type: Sequelize.DATE
            },
            updatedAt: {
              allowNull: false,
              type: Sequelize.DATE
            }
          });
        },
        down: function(queryInterface, Sequelize) {
          return queryInterface.dropTable('Activities');
        }
      };

      'use strict';
      module.exports = {
        up: function(queryInterface, Sequelize) {
          return queryInterface.createTable('Guestlists', {
            id: {
              allowNull: false,
              autoIncrement: true,
              primaryKey: true,
              type: Sequelize.INTEGER
            },
            user_id: {
              type: Sequelize.INTEGER
            },
            activity_id: {
              type: Sequelize.INTEGER
            },
            attending: {
              type: Sequelize.BOOLEAN
            },
            createdAt: {
              allowNull: false,
              type: Sequelize.DATE
            },
            updatedAt: {
              allowNull: false,
              type: Sequelize.DATE
            }
          });
        },
        down: function(queryInterface, Sequelize) {
          return queryInterface.dropTable('Guestlists');
        }
      };


      'use strict';
      module.exports = {
        up: function(queryInterface, Sequelize) {
          return queryInterface.createTable('Likes', {
            id: {
              allowNull: false,
              autoIncrement: true,
              primaryKey: true,
              type: Sequelize.INTEGER
            },
            user_id: {
              type: Sequelize.INTEGER
            },
            activity_id: {
              type: Sequelize.INTEGER
            },
            comment_id: {
              type: Sequelize.INTEGER
            },
            createdAt: {
              allowNull: false,
              type: Sequelize.DATE
            },
            updatedAt: {
              allowNull: false,
              type: Sequelize.DATE
            }
          });
        },
        down: function(queryInterface, Sequelize) {
          return queryInterface.dropTable('Likes');
        }
      };

      'use strict';
      module.exports = {
        up: function(queryInterface, Sequelize) {
          return queryInterface.createTable('Comments', {
            id: {
              allowNull: false,
              autoIncrement: true,
              primaryKey: true,
              type: Sequelize.INTEGER
            },
            date: {
              type: Sequelize.STRING
            },
            title: {
              type: Sequelize.STRING
            },
            description: {
              type: Sequelize.TEXT
            },
            activity_id: {
              type: Sequelize.INTEGER
            },
            user_id: {
              type: Sequelize.INTEGER
            },
            createdAt: {
              allowNull: false,
              type: Sequelize.DATE
            },
            updatedAt: {
              allowNull: false,
              type: Sequelize.DATE
            }
          });
        },
        down: function(queryInterface, Sequelize) {
          return queryInterface.dropTable('Comments');
        }
      };


      'use strict';
      module.exports = {
        up: function(queryInterface, Sequelize) {
          return queryInterface.createTable('Users', {
            id: {
              allowNull: false,
              autoIncrement: true,
              primaryKey: true,
              type: Sequelize.INTEGER
            },
            name: {
              type: Sequelize.STRING
            },
            firstName: {
              type: Sequelize.STRING
            },
            lastName: {
              type: Sequelize.STRING
            },
            username: {
              type: Sequelize.STRING
            },
            email: {
              type: Sequelize.STRING
            },
            password: {
              type: Sequelize.STRING
            },
            salt: {
              type: Sequelize.STRING
            },
            profileUrl: {
              type: Sequelize.STRING
            },
            facebookId: {
              type: Sequelize.STRING
            },
            isAdmin: {
              type: Sequelize.BOOLEAN,
              defaultValue: false
            },
            createdAt: {
              allowNull: false,
              type: Sequelize.DATE
            },
            updatedAt: {
              allowNull: false,
              type: Sequelize.DATE
            }
          });
        },
        down: function(queryInterface, Sequelize) {
          return queryInterface.dropTable('Users');
        }
      };
